service: root
 
provider:
  name: aws
  iam:
    role: servicerole
 
functions:
  root-dev-hello:
    role: root-dev-ap-south-1-lambdaRole
 
 
resources:
  Resources:
    servicerole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: servicerole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: root-dev-lambda
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow # note that these rights are given in the default policy and are required if you want logs out of your lambda(s)
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                -  Effect: "Allow"
                   Action:
                     - "s3:PutObject"
                   Resource:
                     Fn::Join:
                       - ""
                       - - "arn:aws:s3:::"
                         - "Ref" : "ServerlessDeploymentBucket"
   root-dev-hello:
      Type: AWS::IAM::Role
      Properties:
        RoleName: root-dev-hello
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: root-dev-lambda
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                - Effect: Allow
                  Action:
                    - ec2:CreateNetworkInterface
                    - ec2:DescribeNetworkInterfaces
                    - ec2:DetachNetworkInterface
                    - ec2:DeleteNetworkInterface
                  Resource: "*"










#service: root
#frameworkVersion: '3'
#provider:
#  name: aws
#  runtime: python3.8
#  region: ap-south-1

# you can add statements to the Lambda function's IAM Role here
 # iam:
  #  role:
   #   statements:
    #    - Effect: "Allow"
     #     Action:
      #      - "s3:ListBucket"
       #   Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
        #- Effect: "Allow"
         # Action:
          #  - "lambda:*"
            
         # Resource:
          #  Fn::Join:
           #   - ""
            #  - - "arn:aws:s3:::"
             #   - "Ref" : "ServerlessDeploymentBucket"
              #  - "/*"
#functions:
 # hello:
  #  handler: handler.hello
